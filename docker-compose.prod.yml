# Docker Compose 生產環境覆蓋配置
# 使用方式: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # 生產環境主服務覆蓋
  discord-bot:
    image: discord-roas-bot:latest
    environment:
      ENVIRONMENT: production
      LOG_LEVEL: INFO
      # 生產環境安全配置
      SECURITY_RATE_LIMIT_ENABLED: true
      SECURITY_MAX_REQUESTS_PER_MINUTE: 60
      # 效能優化
      MEMORY_LIMIT: 1G
      MAX_WORKERS: 8
      CACHE_TTL: 7200
    # 生產環境資源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '1.0'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    # 生產環境日誌配置
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=discord-bot,environment=production"
    # 增強的健康檢查
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Redis 生產配置
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    profiles:
      - production

  # Nginx 生產配置
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./docs/api:/usr/share/nginx/html/api:ro
    # SSL 憑證自動更新
    depends_on:
      - certbot
    profiles:
      - production

  # Let's Encrypt 憑證管理
  certbot:
    image: certbot/certbot
    container_name: discord-bot-certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/webroot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    profiles:
      - production

  # 監控和告警
  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.prod.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus.prod.yml:/etc/prometheus/prometheus.prod.yml:ro
      - prometheus-data:/prometheus
    profiles:
      - production

  # 告警管理
  alertmanager:
    image: prom/alertmanager:latest
    container_name: discord-bot-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - discord-bot-network
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    profiles:
      - production

  # 自動備份服務
  backup:
    environment:
      BACKUP_SCHEDULE: "0 3 * * *"  # 每天凌晨 3 點
      BACKUP_RETENTION_DAYS: 30
      # 生產環境雲端備份配置
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      S3_BUCKET: ${S3_BACKUP_BUCKET}
    volumes:
      - ./dbs:/backup/source:ro
      - ./backups:/backup/destination
      - ./scripts/backup.sh:/backup/backup.sh:ro
    profiles:
      - production

  # 日誌轉發到外部服務
  log-forwarder:
    image: grafana/promtail:latest
    container_name: discord-bot-promtail
    volumes:
      - ./logs:/var/log/discord-bot:ro
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - discord-bot-network
    profiles:
      - production

# 生產環境特定的網路配置
networks:
  discord-bot-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: discord-bot0
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1