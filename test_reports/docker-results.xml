<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="0" skipped="2" tests="40" time="0.082" timestamp="2025-08-24T06:49:34.212856+08:00" hostname="TszKins-Mac-mini.local"><testcase classname="tests.docker.test_cross_platform_unit.TestSupportedPlatform" name="test_platform_values" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestSupportedPlatform" name="test_get_current_platform" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestSupportedPlatform" name="test_get_current_platform_unsupported" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestResult" name="test_test_result_creation" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestResult" name="test_test_result_timestamp_auto_set" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestPlatformConfig" name="test_windows_config_post_init" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestPlatformConfig" name="test_unix_config_post_init" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_initialization" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_supports_windows_containers" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_get_testable_platforms" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_prepare_container_config" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_get_platform_test_commands_linux" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_get_platform_test_commands_windows" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_verify_platform_test_result_success" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_verify_platform_test_result_failure" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_generate_platform_report" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_generate_recommendations" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformTester" name="test_evaluate_quality_gates" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageMetrics" name="test_coverage_metrics_creation" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageMetrics" name="test_overall_coverage_calculation" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_initialization" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_prepare_coverage_command_default" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_prepare_coverage_command_with_paths" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_parse_coverage_data_no_reports" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_parse_json_coverage" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_generate_json_report" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_generate_text_report" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCoverageReporter" name="test_is_ci_environment" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_initialization" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_analyze_test_failures_all_passed" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_analyze_test_failures_with_failures" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_analyze_test_failures_with_skipped" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_is_ci_environment" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestTestFailureNotifier" name="test_log_notification" time="0.000" /><testcase classname="tests.docker.test_cross_platform_unit.TestCIIntegration" name="test_initialization" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCIIntegration" name="test_configure_test_stage" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCIIntegration" name="test_run_full_test_pipeline_success" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCIIntegration" name="test_run_full_test_pipeline_failure" time="0.001" /><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformIntegration" name="test_full_cross_platform_workflow" time="0.000"><skipped type="pytest.skip" message="需要實際 Docker 環境的整合測試">/Users/tszkinlai/Coding/roas-bot/tests/docker/test_cross_platform_unit.py:721: 需要實際 Docker 環境的整合測試</skipped></testcase><testcase classname="tests.docker.test_cross_platform_unit.TestCrossPlatformIntegration" name="test_ci_integration_workflow" time="0.000"><skipped type="pytest.skip" message="需要實際 CI 環境的整合測試">/Users/tszkinlai/Coding/roas-bot/tests/docker/test_cross_platform_unit.py:726: 需要實際 CI 環境的整合測試</skipped></testcase></testsuite></testsuites>